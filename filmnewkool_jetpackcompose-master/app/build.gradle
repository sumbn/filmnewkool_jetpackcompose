plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'com.google.dagger.hilt.android'
}
def file = rootProject.file("apikey.properties")
def apikey = new Properties()
apikey.load(new FileInputStream(file))

 android {
     namespace 'com.example.appnewkool'
    compileSdk 33

    defaultConfig {
        applicationId 'com.sumbui.appnewkool'
        minSdk 21
        targetSdk 33
        versionCode 4
        versionName '1.1'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    flavorDimensions "default"
    productFlavors {
        dev {
            buildConfigField("String", "BASE_URL", apikey['BASE_URL_DEV'])
            buildConfigField("String", "ACCESS_TOKEN", apikey['ACCESS_TOKEN_DEV'])
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.3"
        kotlinCompilerVersion '1.5.10'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    //implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0'

    //navigation
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:0.21.1-beta"


    //hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-work:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'


    //retrofit
    def retrofit = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation("com.squareup.moshi:moshi-kotlin:1.12.0")
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    // RxJava3
    implementation "io.reactivex.rxjava3:rxjava:3.1.3"
    //RxAndroid
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"

    // okhttpclient
    def ok_httpclient_version = '4.9.0'
    implementation "com.squareup.okhttp3:okhttp:$ok_httpclient_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_httpclient_version"

    // coroutine
    def coroutines_version = '1.5.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    def room_version = "2.5.0"
    implementation("androidx.room:room-runtime:$room_version")
    // Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    // room test helper
    testImplementation("androidx.room:room-testing:$room_version")

    //livedata
    implementation "androidx.compose.runtime:runtime-livedata:1.3.3"

    implementation 'androidx.work:work-runtime-ktx:2.8.0'

}
kapt {
    correctErrorTypes true
}